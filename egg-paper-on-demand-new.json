{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-07-21T01:33:44+02:00",
    "name": "PaperOnDemand New",
    "author": "bolverblitz@ebg.pw",
    "description": "High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies and added hibernation.",
    "features": [
        "eula"
    ],
    "docker_images": {
        "Java 21 (>1.20.5)": "ghcr.io\/pterodactyl\/yolks:java_21",
        "Java 17 (>1.18)": "ghcr.io\/pterodactyl\/yolks:java_17",
        "Java 17J9 (Less RAM Usage)": "ghcr.io\/pterodactyl\/yolks:java_17J9",
        "Java 16 (>1.17)": "ghcr.io\/pterodactyl\/yolks:java_16",
        "Java 16J9 (Less RAM Usage)": "ghcr.io\/pterodactyl\/yolks:java_16J9",
        "Java 11 (>1.16)": "ghcr.io\/pterodactyl\/yolks:java_11",
        "Java 11J9 (Less RAM Usage)": "ghcr.io\/pterodactyl\/yolks:java_11J9",
        "Java 8 (<1.16)": "ghcr.io\/pterodactyl\/yolks:java_8",
        "Java 8J9 (Less RAM Usage)": "ghcr.io\/pterodactyl\/yolks:java_8J9"
    },
    "file_denylist": [],
    "startup": ".\/msh_server.bin -port {{SERVER_PORT}} -d {{DEBUG_LVL}} -file {{SERVER_JARFILE}} -allowkill {{KILL_TIME}} -timeout {{TBSES}} -suspendrefresh {{SUSPEND_REFRESH}} $( [[ ${WL_IMPORT} -eq 1 ]] && echo \" -wlimport\") $( [[ ${SUSPEND_ALLOW} -eq 1 ]] && echo \" -suspendallow\")",
    "config": {
        "files": "{\r\n    \"msh-config.json\": {\r\n        \"parser\": \"json\",\r\n        \"find\": {\r\n            \"Port\": \"{{server.build.default.port}}\",\r\n            \"Commands.StartServerParam\": \"-Xms256M -Xmx{{server.build.memory}}M\",\r\n            \"FileName\": \"{{env.SERVER_JARFILE}}\"\r\n        }\r\n    },\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"25565\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"listening for new clients\"\r\n}",
        "logs": "{}",
        "stop": "^c"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# Paper Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\nPROJECT=paper\r\n\r\nif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\nelse\r\n\tVER_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\t\techo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n\telse\r\n\t\techo -e \"Using the latest ${PROJECT} version\"\r\n\t\tMINECRAFT_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\t\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\t\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\t\techo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\t\techo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n\t\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\t\r\n\tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n\t\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\techo -e \"JAR Name of Server: ${SERVER_JARFILE}\"\r\n\techo -e \"Project Name of Server: ${PROJECT}\"\r\n\techo -e \"Mem of Server: ${SERVER_MEMORY}\"\r\n\techo -e \"Port of Server: ${SERVER_PORT}\"\r\n\tDOWNLOAD_URL=https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\nfi\r\n\r\ncd \/mnt\/server\r\n\r\narch=$(uname -m)\r\n\r\nif [[ $arch == x86_64* ]]; then\r\n    echo \"MSH: X64 Architecture\"\r\n    echo -e \"Running curl -o msh_server.bin ${MSH_D_URL}msh-linux-amd64.bin\"\r\n    curl -o msh_server.bin ${MSH_D_URL}msh-linux-amd64.bin\r\n  elif  [[ $arch == aarch64* ]]; then\r\n    echo \"MSH: aarch64 Architecture\"\r\n    echo -e \"Running curl -o msh_server.bin ${MSH_D_URL}msh-linux-arm64.bin\"\r\n    curl -o msh_server.bin ${MSH_D_URL}msh-linux-arm64.bin\r\n  elif  [[ $arch == arm* ]]; then\r\n    echo \"MSH: ARM not V8 is not supported...\"\r\n  elif  [[ $arch == unknown* ]]; then\r\n    echo \"MSH: Architecture dedection failed...\"\r\n    return 1\r\n  fi\r\n\r\necho -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\r\nif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\nfi\r\n\r\ncurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\r\nchmod u+x .\/msh_server.bin\r\n\r\nif [ ! -f server.properties ]; then\r\n    echo -e \"Downloading MC server.properties\"\r\n    curl -o server.properties https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/minecraft\/java\/server.properties\r\nfi\r\n\r\nif [ ! -f msh-config.json ]; then\r\n    echo -e \"Downloading MSH msh-config.json\"\r\n    curl -o msh-config.json https:\/\/gist.githubusercontent.com\/BolverBlitz\/fa895e8062fcab7dd7a54d768843a261\/raw\/7224a0694a985ba1bff0b4fe9b44f2c79e9b495e\/msh-config.json\r\nfi",
            "container": "ghcr.io\/parkervcp\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version (Releases only)",
            "description": "The version of minecraft to download. \r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.\r\nThis does not support snapschots, to use a snapshot please download the .jar, rename it server.jar and look up the Minecraft Protocol version and edit config.json.",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "The name of the server jarfile to run the server with.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Download Path",
            "description": "A URL to use to download a server.jar rather than the ones in the install script. This is not user viewable.",
            "env_variable": "DL_PATH",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Build Number",
            "description": "The build number for the paper release.\r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Vendor",
            "description": "Here you can write any Text that will be displayed as Server Jar in Minecraft",
            "env_variable": "VENDOR",
            "default_value": "Paper",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "MSH-Download URL",
            "description": "Webserver that serves the binary file of MSH",
            "env_variable": "MSH_D_URL",
            "default_value": "https:\/\/msh.gekware.net\/builds\/egg\/",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Wait time for shutdown",
            "description": "The time in seconds msh should leave the minecraft server online without players",
            "env_variable": "TBSES",
            "default_value": "120",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|between:0,60000",
            "field_type": "text"
        },
        {
            "name": "TimeToKill",
            "description": "There are Plugins that overwrite \/stop so MSH can\u00b4t stop the server, msh will try \/stop. MSH will check the server again after x seconds and if its still running execute a save-all and then kill the server. (Set this high enoth that it dosn\u00b4t false trigger because it can create chunk errors)",
            "env_variable": "KILL_TIME",
            "default_value": "30",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|between:0,60000",
            "field_type": "text"
        },
        {
            "name": "Debug Level",
            "description": "Debug Level for MSH. 1-3, 3 logging everything.",
            "env_variable": "DEBUG_LVL",
            "default_value": "2",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:1,4",
            "field_type": "text"
        },
        {
            "name": "Hib-Info",
            "description": "MOTD when the server is currently not running (Currently not working)",
            "env_variable": "HIB_INFO",
            "default_value": "Hibernating",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:200",
            "field_type": "text"
        },
        {
            "name": "Hib-Starting",
            "description": "MOTD when the minecraft server is starting (Currently not working)",
            "env_variable": "HIB_START",
            "default_value": "Starting",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:200",
            "field_type": "text"
        },
        {
            "name": "Char",
            "description": "Do not edit this",
            "env_variable": "CONST_CHAR",
            "default_value": "&quot;",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:10",
            "field_type": "text"
        },
        {
            "name": "SuspendAllow",
            "description": "When set to true (1) msh will not run \/stop, it will hibernate the process. This should free up system memory and put the server into swap (More info: https:\/\/wiki.archlinux.org\/title\/Power_management\/Suspend_and_hibernate)",
            "env_variable": "SUSPEND_ALLOW",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "SuspendRefresh",
            "description": "This value in seconds will toggle the hibernate state because minecraft thinks it ran into some error if it gets hibernated. This value depends on many variables like memory speed, cpu speed\/usage, i\/o wait and the minecraft software beeing used.",
            "env_variable": "SUSPEND_REFRESH",
            "default_value": "30",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:0,60000",
            "field_type": "text"
        },
        {
            "name": "wlimport",
            "description": "When set to true (1) msh will only start the server when a player from the whitelist is trying to connect",
            "env_variable": "WL_IMPORT",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
}